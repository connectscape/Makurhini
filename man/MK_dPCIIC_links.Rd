% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MK_dPCIIC_links.R
\name{MK_dPCIIC_links}
\alias{MK_dPCIIC_links}
\title{Estimate the differential of the connectivity indexes IIC and PC to prioritize links.}
\usage{
MK_dPCIIC_links(
  nodes,
  attribute = NULL,
  LA = NULL,
  area_unit = "m2",
  distance = list(type = "centroid", resistance = NULL),
  metric = c("IIC", "PC"),
  probability = NULL,
  distance_thresholds = NULL,
  threshold = NULL,
  removal = TRUE,
  change = NULL,
  overall = FALSE,
  parallel = NULL,
  parallel_mode = NULL,
  write = NULL,
  intern = TRUE
)
}
\arguments{
\item{nodes}{Object containing nodes (e.g., habitat patches or fragments) information. It can be of the following classes:\cr
-   \code{Data.frame} with at least two columns: the first for node IDs and the second for attributes.\cr
-   Spatial data of type vector (class \code{sf, SpatVector, SpatialPolygonsDataFrame}). It must be in a projected coordinate system.\cr
-   Raster (class \code{RasterLayer, SpatRaster}). It must be in a projected coordinate system. The values must be integers representing the ID of each habitat patch or node, with non-habitat areas represented by NA values (see \link[raster]{clump} or \link[terra]{patches}).}

\item{attribute}{\code{Character or vector}. If \code{NULL} (only applicable when \code{nodes} is of spatial data of vector or raster type) the area of the nodes will be used as the node attribute. The unit of area can be selected using the \code{area_unit} parameter. To use an alternative attribute, consider the class type of the object in the \code{nodes} parameter: \cr
-   If \code{nodes} is a spatial vector or data.frame, specify \bold{the name of the column} containing the attribute for the nodes. \cr
-   If \code{nodes} is a raster layer then it must be a numeric vector with the node's attribute. The length of the vector must be equal to the number of nodes. If the parameter \bold{weighted} is \code{TRUE} then the numeric vector is multiplied by the area of each node to obtain a weighted habitat index.}

\item{LA}{\code{numeric}. (\emph{optional, default = } \code{NULL}). The maximum landscape attribute, which is the attribute value that would correspond to a hypothetical habitat patch covering all the landscape with the best possible habitat, in which IIC and PC would be equal to 1. For example, if nodes attribute corresponds to the node area, then LA equals total landscape area. If nodes attribute correspond to a quality-weighted area and the quality factor ranges from 0 to 100, LA will be equal to 100 multiplied by total landscape area. The value of LA does not affect at all the importance of the nodes and is only used to calculate the overall landscape connectivity. If no LA value is entered (default) and  \code{overall = TRUE} or \code{onlyoverall = TRUE}, the function will only calculate the numerator of the global connectivity indices and the equivalent connected ECA or EC index.}

\item{area_unit}{\code{character}. (\emph{optional, default = } \code{"m2"}) \cr. A \code{character} indicating the area units when \code{attribute} is \code{NULL}. Some options are "m2" (the default), "km2", "cm2", or "ha";  See \link[Makurhini]{unit_convert} for details.}

\item{distance}{A \code{matrix} or \code{list} to establish the distance between each pair of nodes. Distance between nodes may be Euclidean distances (straight-line distance) or effective distances (cost distances) by considering the landscape resistance to the species movements. \cr
- If it is a \code{matrix}, then the number of columns and rows must be equal to the number of nodes. This distance matrix could be generated by the \link[Makurhini]{distancefile} function.\cr
- If it is a \code{list} of parameters, then it must contain the distance parameters necessary to calculate the distance between nodes. For example, two of the most important parameters: \code{“type”} and \code{“resistance”}. For \code{"type"} choose one  of the distances:  \bold{"centroid" (faster), "edge", "least-cost" or "commute-time"}. If the type is equal to \code{"least-cost"} or \code{"commute-time"}, then you must use the \code{"resistance"} argument. For example: \code{distance(type = "least-cost", resistance = raster_resistance)}. \cr
To see more arguments see the \link[Makurhini]{distancefile} function.}

\item{metric}{A \code{character} indicating the connectivity metric to use: \code{"PC"} (the default and recommended) to calculate the probability of connectivity index, and \code{"IIC"} to calculate the binary integral index of connectivity.}

\item{probability}{A \code{numeric} value indicating the probability that corresponds to the distance specified in the \code{distance_threshold}. For example, if the \code{distance_threshold} is a median dispersal distance, use a probability of 0.5 (50\%). If the \code{distance_threshold} is a maximum dispersal distance, set a probability of 0.05 (5\%) or 0.01 (1\%). Use in case of selecting the "PC" metric. If \code{probability = NULL}, then a probability of 0.5 will be used.}

\item{distance_thresholds}{A \code{numeric} indicating the dispersal distance or distances (meters) of the considered species. If \code{NULL} then distance is estimated as the median dispersal distance between nodes. Alternatively, the \link[Makurhini]{dispersal_distance} function can be used to estimate the dispersal distance using the species home range.}

\item{threshold}{\code{numeric}. Pairs of nodes with a distance value greater than this threshold will be discarded in the analysis which can speed up processing.}

\item{removal}{\code{logical} indicating whether the link removal mode should be used to calculate link importance (see details). Default is TRUE.}

\item{change}{(\emph{optional, default} \code{NULL}). A \code{numeric} indicating the new distances  used to calculate link importance under the link change mode should be (see details). By default, link change is not calculated.}

\item{overall}{\code{logical}. If \code{TRUE}, then the EC index will be added to the result which is transformed into a list. Default equal to FALSE}

\item{parallel}{(\emph{optional, default =} \code{NULL}).
A \code{numeric} specifying the number of cores to parallelize the index estimation of the PC or IIC index and its deltas.Particularly useful when you have more than 1000 nodes. By default the analyses are not parallelized.}

\item{parallel_mode}{(\emph{optional, default =} \code{1}).
A \code{numeric} indicating the mode of parallelization: Mode \bold{1} (the default option, and recommended for less than 1000 nodes) parallelizes on the connectivity delta estimate, while Mode \bold{2} (recommended for more than 1000 nodes)
parallelizes on the shortest paths between vertices estimate.}

\item{write}{\code{Character} indicating the path and initial prefix of the objects to save, for example, "C:/example". By default, nothing is saved. The saved objects are: \cr
-   The importance of each link. The format of the output file is a csv.\cr
-   Overall landscape connectivity table (if the \code{overall} argument is \code{TRUE}). The format of the output file is a csv.}

\item{intern}{\code{logical}. Show the progress of the process, \code{default = TRUE}. Sometimes the advance process does not reach 100 percent when operations are carried out very quickly.}
}
\value{
-   If only \bold{one distance} was used in the parameter \code{distance_thresholds} then return an object of class \code{data.frame} with the link removal or/and change values.\cr
-   If you add \bold{\code{overall = TRUE}}, then a list containing the \code{data.frame} class object with the link removal or/and change values and a \code{data.frame} with the overall connectivity values will be returned.\cr
-   If you use \bold{multiple distance thresholds} (e.g, \code{distance_thresholds = c(1000, 5000, 80000)}), the resulting data should be returned in the form of a \code{list}, wherein each \code{list} item contains the resulting objects for each distance threshold.
}
\description{
This function calculates the dPC or dIIC index to estimate the link importance for conservation and restoration. It calculates the contribution of each individual link to \bold{maintain} (mode: link removal) or \bold{improve} (mode: link change) the overall connectivity under one or several distance thresholds.
}
\details{
This function calculates the \bold{importance or contribution of each link} to the overall landscape connectivity. The importance of a link is calculated as the variation in the value of the \bold{PC} or \bold{IIC} indices after certain changes affecting that link.
The link importance analysis can be performed under the following two different modes:\cr
-   If \code{removal = TRUE}, the function removes one by one each of the links existing in the landscape network and calculates the impact of that link loss on landscape connectivity with the dPC or dIIC metrics. This mode is useful to identify the priority links to conserve: the ones with the highest contribution to the overall landscape connectivity (highest dPC or dIIC value).\cr
-   If \code{change! = NULL}, the function replaces one by one each of the links existing in the landscape network and calculates the impact of that link change on landscape connectivity with the dPC or dIIC metrics. This mode is useful to identify the priority links to both conserve and restore. Positive dPC or dIIC values correspond to links losses or degradation, and the priority links to conserve correspond to those with the highest positive values. Negative dPC or dIIC values correspond to links improvements, and the priority links to restore correspond to those with the smallest negative values. This mode requires additional information, a \bold{distance matrix} with the new distance values between all pairs of nodes. These new distance values will be in general different than the ones in the \code{distance} parameter. A smaller distance corresponds to an increase in the quality or strength of the link between two patches in a given change or restoration scenario. A higher distance means that the connection between those two patches gets weaker corresponding to a degradation scenario. All types of combinations and different types of changes are possible for each of the links. For example, some connections may be improved, some others may decrease their quality or even disappear completely (i.e., new distance = NA), and some other links may suffer no change at all in the same analysis, depending on the particular new distance values for each link.
}
\note{
The link importance analysis can be much more time consuming than the node importance analysis (i.e., \link[Makurhini]{MK_dPCIIC}). Sometimes the advance process does not reach 100 percent when operations are carried out very quickly.
}
\examples{
\dontrun{
library(Makurhini)
data("vegetation_patches", package = "Makurhini")
nrow(vegetation_patches) # Number of patches
#Two distance threshold,
delta <- MK_dPCIIC_links(nodes = vegetation_patches,
                        attribute = NULL,
                        area_unit = "km2",
                        distance = list(type = "centroid"),
                        removal = TRUE,
                        metric = "PC",
                        probability = 0.5,
                        distance_thresholds = c(20000, 40000),
                        parallel = NULL,
                        parallel_mode = NULL,
                        intern = TRUE) #20, 40 km
delta
#Parallel using mode 1
delta <- MK_dPCIIC_links(nodes = vegetation_patches,
                        attribute = NULL,
                        area_unit = "km2",
                        distance = list(type = "centroid"),
                        removal = TRUE,
                        metric = "PC",
                        probability = 0.5,
                        distance_thresholds = c(20000, 40000),
                        parallel = 4,
                        parallel_mode = 1,
                        intern = TRUE) #20, 40 km
delta

 #Link change option
distance_change <- distancefile(nodes = vegetation_patches,
                                id = "id", type = "centroid",
                                pairwise = FALSE)
#Randomly change distances
sample_distance <- sample(which(upper.tri(distance_change)), 5000)
reduce_value <- runif(length(sample_distance))
distance_change[sample_distance] <-distance_change[sample_distance] * reduce_value
distance_change[lower.tri(distance_change)] <- distance_change[upper.tri(distance_change)]

delta <- MK_dPCIIC_links(nodes = vegetation_patches,
                         attribute = NULL,
                         area_unit = "km2",
                         distance = list(type = "centroid"),
                         removal = TRUE,
                         change = distance_change,
                         metric = "PC",
                         probability = 0.5,
                         distance_thresholds = c(20000, 40000),
                         parallel = NULL,
                         parallel_mode = NULL,
                         intern = TRUE,) #20, 40 km
delta
}
}
\references{
-   Saura, S. & Torné, J. 2012. Conefor 2.6 user manual (May 2012). Universidad Politécnica de Madrid. Available at \url{www.conefor.org}.\cr
-   Pascual-Hortal, L. & Saura, S. 2006. Comparison and development of new graph-based landscape connectivity indices: towards the priorization of habitat patches and corridors for conservation. Landscape Ecology 21 (7): 959-967.\cr
-   Saura, S. & Pascual-Hortal, L. 2007. A new habitat availability index to integrate connectivity in landscape conservation planning: comparison with existing indices and application to a case study. Landscape and Urban Planning 83 (2-3): 91-103.\cr
-   Hanski, I. and Ovaskainen, O. 2000. The metapopulation capacity of a fragmented landscape. Nature 404: 755–758.
}
