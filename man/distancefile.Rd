% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distancefile.R
\name{distancefile}
\alias{distancefile}
\title{Get a table or matrix with the distances between pairs of nodes.}
\usage{
distancefile(
  nodes,
  id,
  type = "centroid",
  distance_unit = NULL,
  keep = NULL,
  resistance = NULL,
  resist.units = FALSE,
  CostFun = NULL,
  ngh = NULL,
  mask = NULL,
  threshold = NULL,
  geometry_out = NULL,
  bounding_circles = NULL,
  parallel = FALSE,
  ActiveParallel = FALSE,
  least_cost.java = FALSE,
  cores.java = 1,
  ram.java = NULL,
  pairwise = TRUE,
  write = NULL
)
}
\arguments{
\item{nodes}{object of class \code{sf, SpatialPolygons, RasterLaryer or SpatRaster} (terra package). It must be in a \bold{projected coordinate system}.
If nodes is a \code{raster} layer then raster values (Integer) will be taken as "id".}

\item{id}{\code{character}. If nodes is a shapefile then you must specify the column name with the node ID in the shapefile data table.}

\item{type}{\code{character}. Choose one of the distance options:\cr
-    \code{"centroid"} (faster option, default), where Euclidean distance is calculated from feature centroid
-    \code{"edge"}, where Euclidean distance is calculated from feature edges.\cr
-    \code{"least-cost"} that takes into account obstacles and local friction of the landscape (see, \bold{gdistance} package).\cr
-    \code{"commute-time"} that is analogous to the resistance distance of circuitscape. The commute-time distance is
based on the random walk theory and calculated using the electrical circuit theory (See, \bold{gdistance} package).\cr
If the type is equal to \code{"least-cost"} or \code{"commute-time"}, then you have to use the \bold{"resistance"} argument.}

\item{distance_unit}{\code{character}. If \code{"least-cost"} or \code{"commute-time"} is selected or \code{resist.units = TRUE} then you can set a distance unit
("m", "km", "inch", "foot", "yard", "mile"). Default equal to meters "m" (see, \link[Makurhini]{unit_convert}).}

\item{keep}{\code{numeric}. In case you have selected the \code{"edge"} distance, use this option to simplify the geometry and reduce the
number of vertices. The value can range from 0 to 1 and is the proportion of points to retain (default equal to \code{NULL}). The higher the value,
 the higher the speed but less precision.}

\item{resistance}{\code{raster}. Raster object with \bold{resistance} values. If \bold{\code{least_cost.java = TRUE}}, then
resistance must bee an \bold{integer raster} (i.e., integer values).}

\item{resist.units}{\code{logical}. If \code{resist.units = TRUE} and \code{type = "least-cost"} then cost units are converted to metric units by multiplying the cost by the raster resolution.}

\item{CostFun}{\code{function}. A function to compute the cost to move between cells. Available only if you you have selected
the \code{"least-cost"} or \code{"commute-time"} distance. The default is the mean (isotropic cost distance):
\code{function(x) 1/mean(x)}. If resistance is a conductance raster then you can use: \code{function(x) mean(x)}}

\item{ngh}{\code{numeric}. Neighbor graph (directions) for distance calculations: 4 (von Neu-mann neighbourhood),
8 (Moore neighborhood) or 16. Available only if you have selected the \code{"least-cost"} or \code{"commute-time"} distance.}

\item{mask}{object of class \code{sf, sfc, sfg. SpatialPolygons}. For higher processing speed of \code{"least-cost"} or \code{"commute-time"} distances. Use this option to clip the resistance at the extent of the mask.}

\item{threshold}{\code{numeric}. Distance threshold, pairs of nodes with a distance value above this threshold will be discarded.}

\item{geometry_out}{\code{numeric}. You can use this argument if you have selected the \code{"least-cost"} or \code{"commute-time"} distance.
If some spatial geometries are out of the resistance extent, then a buffer zone the large enough to cover
these spatial geometries and with this numeric value will be added to the resistance, so that it is possible to
calculate a cost distance value for the pairs of nodes that involve these geometries and avoid an error.
If NULL, then the Euclidean distance between centroids (\code{type = "centroid"}) will be calculated to find these distances.}

\item{bounding_circles}{\code{numeric}. If a value is entered, this will create bounding circles around pairs of core areas
(recommended for speed, large resistance rasters or pixel resolution < 150 m).
Buffer distances are entered in map units.}

\item{parallel}{\code{logical} or \code{numerical}. Recommended for a large number of nodes or very large RasterLayer.}

\item{ActiveParallel}{\code{logical}. It should be \code{TRUE} if there is already an open parallelization plan.}

\item{least_cost.java}{\code{logical}. If \code{TRUE} then the programming language and computing platform \bold{'java'} will be used
to estimate the least-cost distance \bold{using a resistance raster and the following formula}: \code{function(x) 1/mean(x)}. It is necessary to have \bold{java} installed. This option use
the package \bold{\code{graph4lg}} to reduce computation times.}

\item{cores.java}{\code{numeric}. Computer cores used to run the .jar file (see, \bold{\code{graph4lg}} ), default = \code{1}.}

\item{ram.java}{\code{numeric}. RAM gigabytes to run the .jar file (see, \bold{\code{graph4lg}} ), default = \code{NULL}.}

\item{pairwise}{\code{logical}. If \code{TRUE} a pairwise table of class \code{data.frame} is returned (From, To, distance) otherwise it will be a \code{matrix}.}

\item{write}{\code{character}. Output path, with name and extension \bold{".txt"}.}
}
\value{
Exports a euclidean or cost distance table between pairs of nodes.
}
\description{
Get a table or matrix with the distances (Euclidean or cost distances) between pairs of nodes. It can be used as a connector file.
}
\references{
\url{https://www.rdocumentation.org/packages/rgeos/versions/0.3-26/topics/gDistance}\cr
\url{http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/98/normand/main.html}.
}
